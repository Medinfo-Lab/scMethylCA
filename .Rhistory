fontsize = 16,       # 字号
fontface = "bold",   # 加粗
# col = "blue",        # 字体颜色
))
Heatmap(data,show_row_names = F,show_column_names = F,
show_row_dend = F,show_column_dend = F,column_order = rownames(ann_col),
top_annotation = top_anno,column_title = "CpG Heatmap",
column_title_side = "bottom",col = col_fun,
column_title_gp = gpar(
fontsize = 16,       # 字号
fontface = "bold"   # 加粗
# col = "blue",        # 字体颜色
))
top_anno <- HeatmapAnnotation(which = "column",Sample = c(rep("Normal",83),rep("Tumor",83)),
annotation_name_side = "right",
col = list(sample = c("Normal"="#d57b70","Tumor"="#acd2c7"))
)
col_fun <- colorRamp2(
breaks = c(1, 0.5, 0),  # 断点值
colors = c("#CA0020", "#F7F7F7", "#0571B0")  # 对应颜色
)
Heatmap(data,show_row_names = F,show_column_names = F,
show_row_dend = F,show_column_dend = F,column_order = rownames(ann_col),
top_annotation = top_anno,column_title = "CpG Heatmap",
column_title_side = "bottom",col = col_fun,
column_title_gp = gpar(
fontsize = 16,       # 字号
fontface = "bold"   # 加粗
# col = "blue",        # 字体颜色
))
View(data)
ggplot(STAD_CpG_umap_data)+
geom_point(STAD_CpG_umap_data,mapping=aes(UMAP1,UMAP2,color=group),size = 2)+
theme_classic()+
labs(x = "UMAP1",y = "UMAP2",title = "CpG UMAP")+
theme(legend.title=element_blank(),
plot.title = element_text(hjust = 0.5,size = 18,face = "bold"),
axis.title.x = element_text(face = "bold",size = 15),
axis.title.y = element_text(face = "bold",size = 15))
ggplot(STAD_CpG_umap_data)+
geom_point(STAD_CpG_umap_data,mapping=aes(UMAP1,UMAP2,color=group),size = 2,alpha = 0.5)+
theme_classic()+
labs(x = "UMAP1",y = "UMAP2",title = "CpG UMAP")+
theme(legend.title=element_blank(),
plot.title = element_text(hjust = 0.5,size = 18,face = "bold"),
axis.title.x = element_text(face = "bold",size = 15),
axis.title.y = element_text(face = "bold",size = 15))
ggplot(STAD_CpG_umap_data)+
geom_point(STAD_CpG_umap_data,mapping=aes(UMAP1,UMAP2,color=group),size = 2.5,alpha = 0.5)+
theme_classic()+
labs(x = "UMAP1",y = "UMAP2",title = "CpG UMAP")+
theme(legend.title=element_blank(),
plot.title = element_text(hjust = 0.5,size = 18,face = "bold"),
axis.title.x = element_text(face = "bold",size = 15),
axis.title.y = element_text(face = "bold",size = 15))
ggplot(STAD_CpG_umap_data)+
geom_point(STAD_CpG_umap_data,mapping=aes(UMAP1,UMAP2,color=group),size = 2.5,alpha = 0.8)+
theme_classic()+
labs(x = "UMAP1",y = "UMAP2",title = "CpG UMAP")+
theme(legend.title=element_blank(),
plot.title = element_text(hjust = 0.5,size = 18,face = "bold"),
axis.title.x = element_text(face = "bold",size = 15),
axis.title.y = element_text(face = "bold",size = 15))
ggplot(STAD_CpG_umap_data)+
geom_point(STAD_CpG_umap_data,mapping=aes(UMAP1,UMAP2,color=group),size = 2.5,alpha = 0.7)+
theme_classic()+
labs(x = "UMAP1",y = "UMAP2",title = "CpG UMAP")+
theme(legend.title=element_blank(),
plot.title = element_text(hjust = 0.5,size = 18,face = "bold"),
axis.title.x = element_text(face = "bold",size = 15),
axis.title.y = element_text(face = "bold",size = 15))
ggplot(STAD_CpG_umap_data)+
geom_point(STAD_CpG_umap_data,mapping=aes(UMAP1,UMAP2,color=group),size = 2.5,alpha = 0.7)+
theme_classic()+
labs(x = "UMAP1",y = "UMAP2",title = "CpG UMAP")+
theme(legend.title=element_blank(),
plot.title = element_text(hjust = 0.5,size = 18,face = "bold"),
axis.title.x = element_text(face = "bold",size = 15),
axis.title.y = element_text(face = "bold",size = 15))
STAD_CpG_mofa <- run_umap(STAD_CpG_mofa,,min_dist = 0.8)
plot_dimred(STAD_CpG_mofa, method = "UMAP",color_by = "group",dot_size = 2,label = F)+
theme(legend.title=element_blank())
STAD_CpG_mofa <- MOFA_est(mofa_list)
samples_metadata(STAD_CpG_mofa)
sample_metadata <- data.frame(
sample = samples_names(STAD_CpG_mofa)[[1]],
condition = STAD_sample_choose$group
)
samples_metadata(STAD_CpG_mofa) <- sample_metadata
STAD_CpG_mofa <- run_umap(STAD_CpG_mofa,,min_dist = 0.5)
plot_dimred(STAD_CpG_mofa, method = "UMAP",color_by = "condition",dot_size = 2,label = F)+
theme(legend.title=element_blank())
STAD_CpG_mofa <- MOFA_est(mofa_list,group = STAD_sample_choose$group)
STAD_CpG_mofa <- run_umap(STAD_CpG_mofa,,min_dist = 1)
plot_dimred(STAD_CpG_mofa, method = "UMAP",color_by = "group",dot_size = 2,label = F)+
theme(legend.title=element_blank())
STAD_CpG_methlevel_choose_mean_matrix <- as.matrix(STAD_CpG_methlevel_choose)
mofa_list <- list()
mofa_list$file1 <- STAD_CpG_methlevel_choose_mean_matrix
STAD_CpG_mofa <- MOFA_est(mofa_list,group = STAD_sample_choose$group)
STAD_CpG_mofa <- run_umap(STAD_CpG_mofa,,min_dist = 1)
STAD_CpG_mofa <- run_umap(STAD_CpG_mofa)
plot_dimred(STAD_CpG_mofa, method = "UMAP",color_by = "group",dot_size = 2,label = F)+
theme(legend.title=element_blank())
STAD_CpG_mofa <- run_umap(STAD_CpG_mofa,min_dist = 1)
plot_dimred(STAD_CpG_mofa, method = "UMAP",color_by = "group",dot_size = 2,label = F)+
theme(legend.title=element_blank())
a <- STAD_CpG_methlevel_choose
a[is.na(a)] <- 0.5
STAD_CpG_methlevel_choose_mean_matrix <- as.matrix(a)
mofa_list <- list()
mofa_list$file1 <- STAD_CpG_methlevel_choose_mean_matrix
STAD_CpG_mofa <- MOFA_est(mofa_list,group = STAD_sample_choose$group)
STAD_CpG_mofa <- run_umap(STAD_CpG_mofa)
plot_dimred(STAD_CpG_mofa, method = "UMAP",color_by = "group",dot_size = 2,label = F)+
theme(legend.title=element_blank())
STAD_CpG_methlevel_choose_mean_matrix <- as.matrix(STAD_CpG_methlevel_choose_mean)
mofa_list <- list()
mofa_list$file1 <- STAD_CpG_methlevel_choose_mean_matrix
STAD_CpG_mofa <- MOFA_est(mofa_list,group = STAD_sample_choose$group)
STAD_CpG_mofa <- run_umap(STAD_CpG_mofa,min_dist = 1)
STAD_CpG_mofa <- run_umap(STAD_CpG_mofa)
plot_dimred(STAD_CpG_mofa, method = "UMAP",color_by = "group",dot_size = 2,label = F)+
theme(legend.title=element_blank())
STAD_CpG_umap_data <- STAD_CpG_mofa@dim_red$UMAP
STAD_CpG_umap_data <- cbind(STAD_CpG_umap_data,STAD_CpG_mofa@samples_metadata$group)
colnames(STAD_CpG_umap_data)[4] <- "group"
rownames(STAD_CpG_umap_data) <- 1:nrow(STAD_CpG_umap_data)
ggplot(STAD_CpG_umap_data)+
geom_point(STAD_CpG_umap_data,mapping=aes(UMAP1,UMAP2,color=group),size = 2.5,alpha = 0.7)+
theme_classic()+
labs(x = "UMAP1",y = "UMAP2",title = "CpG UMAP")+
theme(legend.title=element_blank(),
plot.title = element_text(hjust = 0.5,size = 18,face = "bold"),
axis.title.x = element_text(face = "bold",size = 15),
axis.title.y = element_text(face = "bold",size = 15))
STAD_CpG_mofa <- run_umap(STAD_CpG_mofa)
plot_dimred(STAD_CpG_mofa, method = "UMAP",color_by = "group",dot_size = 2,label = F)+
theme(legend.title=element_blank())
STAD_CpG_umap_data <- STAD_CpG_mofa@dim_red$UMAP
STAD_CpG_umap_data <- cbind(STAD_CpG_umap_data,STAD_CpG_mofa@samples_metadata$group)
colnames(STAD_CpG_umap_data)[4] <- "group"
rownames(STAD_CpG_umap_data) <- 1:nrow(STAD_CpG_umap_data)
ggplot(STAD_CpG_umap_data)+
geom_point(STAD_CpG_umap_data,mapping=aes(UMAP1,UMAP2,color=group),size = 2.5,alpha = 0.7)+
theme_classic()+
labs(x = "UMAP1",y = "UMAP2",title = "CpG UMAP")+
theme(legend.title=element_blank(),
plot.title = element_text(hjust = 0.5,size = 18,face = "bold"),
axis.title.x = element_text(face = "bold",size = 15),
axis.title.y = element_text(face = "bold",size = 15))
Heatmap(data,show_row_names = F,show_column_names = F,
show_row_dend = F,show_column_dend = F,column_order = rownames(ann_col),
top_annotation = top_anno,column_title = "CpG Heatmap",
column_title_side = "bottom",col = col_fun,
column_title_gp = gpar(
fontsize = 18,       # 字号
fontface = "bold"   # 加粗
# col = "blue",        # 字体颜色
))
Heatmap(data,show_row_names = F,show_column_names = F,
show_row_dend = F,show_column_dend = F,column_order = rownames(ann_col),
top_annotation = top_anno,column_title = "CpG Heatmap",
column_title_side = "bottom",col = col_fun,
column_title_gp = gpar(
fontsize = 17,       # 字号
fontface = "bold"   # 加粗
# col = "blue",        # 字体颜色
))
#cov circle
STAD_GpC_files <- list.files("../database_2/cov/STAD/GpC",
pattern = "\\.cov$",
full.names = T)
STAD_GpC_file <- read.table(STAD_GpC_files[160])
Cov_circle(STAD_GpC_file)
# circos.par("default.fontfamily" = "Times New Roman")
text(0, 0, "Sample Circle", cex = 1)
# circos.par("default.fontfamily" = "Times New Roman")
text(0, 0, "Sample Circle", cex = 1,font=2)
Cov_circle(STAD_GpC_file)
# circos.par("default.fontfamily" = "Times New Roman")
text(0, 0, "Sample Circle", cex = 1,font=2)
ggplot(STAD_CpG_umap_data)+
geom_point(STAD_CpG_umap_data,mapping=aes(UMAP1,UMAP2,color=group),size = 2.5,alpha = 0.7)+
theme_classic()+
labs(x = "UMAP1",y = "UMAP2",title = "CpG UMAP")+
theme(legend.title=element_blank(),
plot.title = element_text(hjust = 0.5,size = 18,face = "bold"),
axis.title.x = element_text(face = "bold",size = 15),
axis.title.y = element_text(face = "bold",size = 15))
STAD_CpG_mofa <- run_umap(STAD_CpG_mofa)
plot_dimred(STAD_CpG_mofa, method = "UMAP",color_by = "group",dot_size = 2,label = F)+
theme(legend.title=element_blank())
STAD_CpG_mofa <- run_umap(STAD_CpG_mofa)
plot_dimred(STAD_CpG_mofa, method = "UMAP",color_by = "group",dot_size = 2,label = F)+
theme(legend.title=element_blank())
STAD_CpG_mofa <- run_umap(STAD_CpG_mofa,min_dist = 1)
plot_dimred(STAD_CpG_mofa, method = "UMAP",color_by = "group",dot_size = 2,label = F)+
theme(legend.title=element_blank())
STAD_CpG_mofa <- run_umap(STAD_CpG_mofa,min_dist = 0.9)
plot_dimred(STAD_CpG_mofa, method = "UMAP",color_by = "group",dot_size = 2,label = F)+
theme(legend.title=element_blank())
STAD_CpG_mofa <- run_umap(STAD_CpG_mofa,min_dist = 0.9)
plot_dimred(STAD_CpG_mofa, method = "UMAP",color_by = "group",dot_size = 2,label = F)+
theme(legend.title=element_blank())
STAD_CpG_mofa <- run_umap(STAD_CpG_mofa,min_dist = 1)
plot_dimred(STAD_CpG_mofa, method = "UMAP",color_by = "group",dot_size = 2,label = F)+
theme(legend.title=element_blank())
STAD_CpG_mofa <- run_umap(STAD_CpG_mofa,min_dist = 1)
plot_dimred(STAD_CpG_mofa, method = "UMAP",color_by = "group",dot_size = 2,label = F)+
theme(legend.title=element_blank())
STAD_CpG_mofa <- run_umap(STAD_CpG_mofa,min_dist = 1)
plot_dimred(STAD_CpG_mofa, method = "UMAP",color_by = "group",dot_size = 2,label = F)+
theme(legend.title=element_blank())
STAD_CpG_umap_data <- STAD_CpG_mofa@dim_red$UMAP
STAD_CpG_umap_data <- cbind(STAD_CpG_umap_data,STAD_CpG_mofa@samples_metadata$group)
colnames(STAD_CpG_umap_data)[4] <- "group"
rownames(STAD_CpG_umap_data) <- 1:nrow(STAD_CpG_umap_data)
ggplot(STAD_CpG_umap_data)+
geom_point(STAD_CpG_umap_data,mapping=aes(UMAP1,UMAP2,color=group),size = 2.5,alpha = 0.7)+
theme_classic()+
labs(x = "UMAP1",y = "UMAP2",title = "CpG UMAP")+
theme(legend.title=element_blank(),
plot.title = element_text(hjust = 0.5,size = 18,face = "bold"),
axis.title.x = element_text(face = "bold",size = 15),
axis.title.y = element_text(face = "bold",size = 15))
#chr analysis
STAD_chr_split <- Chr_region_process(rownames(STAD_CpG_methlevel_choose),"split")
STAD_chr_annot <- Chr_region_annot(STAD_chr_split,TxDb.Hsapiens.UCSC.hg19.knownGene)
STAD_variance <- Methy_group_variance_analysis(STAD_CpG_methlevel_choose,STAD_sample_choose,"tumor")
library(scMethylCA)
STAD_variance <- Methy_group_variance_analysis(STAD_CpG_methlevel_choose,STAD_sample_choose,"tumor")
STAD_variance <- Meth_group_variance_analysis(STAD_CpG_methlevel_choose,STAD_sample_choose,"tumor")
STAD_chr_annot_variance <- cbind(STAD_variance,STAD_chr_annot)
STAD_chr_annot_variance_nona <- STAD_chr_annot_variance[!is.na(STAD_chr_annot_variance$ENSEMBL),]
STAD_chr_annot_variance_GSEA <- GSEA_analysis(STAD_chr_annot_variance,gmt_file = "../data/c2.cp.kegg_legacy.v2024.1.Hs.symbols.gmt")
STAD_chr_annot_variance_GSEA_dataframe <- as.data.frame(STAD_chr_annot_variance_GSEA)
STAD_chr_annot_variance_GSEA_dataframe_choose <- STAD_chr_annot_variance_GSEA_dataframe %>%
filter(pvalue<0.1)
gseaplot2(STAD_chr_annot_variance_GSEA, STAD_chr_annot_variance_GSEA_dataframe_choose$ID, pvalue_table = T)
STAD_chr_annot_variance_GSEA_dataframe_choose$ID
View(STAD_chr_annot_variance_GSEA_dataframe)
View(STAD_chr_annot_variance)
STAD_chr_annot_variance_nona <- STAD_chr_annot_variance[!is.na(STAD_chr_annot_variance$ENSEMBL),]
STAD_chr_annot_variance_GSEA <- GSEA_analysis(STAD_chr_annot_variance_nona,gmt_file = "../data/c2.cp.kegg_legacy.v2024.1.Hs.symbols.gmt")
View(STAD_chr_annot_variance_GSEA)
STAD_chr_annot_variance_GSEA <- GSEA_analysis(STAD_chr_annot_variance,gmt_file = "../data/c2.cp.kegg_legacy.v2024.1.Hs.symbols.gmt")
detach("package:scMethylCA", unload = TRUE)
#' @examples
#' GSEA analysis
#'
#' @param file_tmp Difference analysis results
#' @param gmt_data user input annotation of TERM TO GENE mapping, a data.frame of 2 column with term and gene
#' @param pvaluecutoff adjusted pvalue cutoff
#'
#' @return gseaResult object
#' @export
#'
#' @examples
GSEA_analysis <- function(file_tmp,gmt_file,pvaluecutoff=1){
file_data <- file_tmp
gmt_data=read.gmt(gmt_file)
file_data_trim <- file_data[,c("seqnames","start","end","ENSEMBL","SYMBOL","logFC","P_value","adj_P.value")]
rt=file_data_trim[order(file_data_trim[,"logFC"],decreasing=T),]
logFC=as.vector(rt[,"logFC"])
names(logFC)=as.vector(rt[,"SYMBOL"])
GSEA_data=GSEA(logFC,TERM2GENE=gmt_data,pvalueCutoff = pvaluecutoff)
return(GSEA_data)
}
# STAD_chr_annot_variance_nona <- STAD_chr_annot_variance[!is.na(STAD_chr_annot_variance$ENSEMBL),]
STAD_chr_annot_variance_GSEA <- GSEA_analysis(STAD_chr_annot_variance,gmt_file = "../data/c2.cp.kegg_legacy.v2024.1.Hs.symbols.gmt")
View(STAD_chr_annot_variance_GSEA)
STAD_chr_annot_variance_GSEA_dataframe <- as.data.frame(STAD_chr_annot_variance_GSEA)
STAD_chr_annot_variance_GSEA_dataframe_choose <- STAD_chr_annot_variance_GSEA_dataframe %>%
filter(pvalue<0.1)
gseaplot2(STAD_chr_annot_variance_GSEA, STAD_chr_annot_variance_GSEA_dataframe_choose$ID, pvalue_table = T)
#GpC heatmap
data <- STAD_GpC_methlevel[rownames(STAD_CpG_methlevel_choose),]
data <- as.matrix(data)
data[is.na(data)] <- 0.5
ann_col = data.frame(
Sample=c(rep("Normal",83),rep("Tumor",83)))#创建分组列
row.names(ann_col) <- colnames(data)
top_anno <- HeatmapAnnotation(which = "column",sample = c(rep("Normal",83),rep("Tumor",83)),
annotation_name_side = "right",
col = list(sample = c("Normal"="#d57b70","Tumor"="#acd2c7"))
)
Heatmap(data,show_row_names = F,show_column_names = F,
show_row_dend = F,show_column_dend = F,column_order = rownames(ann_col),
top_annotation = top_anno,column_title = "GpC Heatmap",
column_title_side = "bottom",col = col_fun,
column_title_gp = gpar(
fontsize = 16,       # 字号
fontface = "bold"   # 加粗
# col = "blue",        # 字体颜色
))
top_anno <- HeatmapAnnotation(which = "column",Sample = c(rep("Normal",83),rep("Tumor",83)),
annotation_name_side = "right",
col = list(sample = c("Normal"="#d57b70","Tumor"="#acd2c7"))
)
Heatmap(data,show_row_names = F,show_column_names = F,
show_row_dend = F,show_column_dend = F,column_order = rownames(ann_col),
top_annotation = top_anno,column_title = "GpC Heatmap",
column_title_side = "bottom",col = col_fun,
column_title_gp = gpar(
fontsize = 16,       # 字号
fontface = "bold"   # 加粗
# col = "blue",        # 字体颜色
))
#GpC mofa
STAD_GpC_methlevel_choose_mean <- NA_padding_num_mean(STAD_GpC_methlevel_choose,0.5)
library(scMethylCA)
#GpC mofa
STAD_GpC_methlevel_choose_mean <- NA_padding_num_mean(STAD_GpC_methlevel_choose,0.5)
STAD_GpC_methlevel_choose_mean_matrix <- as.matrix(STAD_GpC_methlevel_choose_mean)
mofa_list <- list()
mofa_list$file1 <- STAD_GpC_methlevel_choose_mean_matrix
STAD_GpC_mofa <- MOFA_est(mofa_list)
STAD_GpC_mofa <- run_umap(STAD_GpC_mofa,min_dist = 0.01)
plot_dimred(STAD_GpC_mofa, method = "UMAP",color_by = "group",dot_size = 2,label = F)+
theme(legend.title=element_blank())
#GpC mofa
STAD_GpC_methlevel_choose_mean <- NA_padding_mean(STAD_GpC_methlevel_choose)
STAD_GpC_methlevel_choose_mean_matrix <- as.matrix(STAD_GpC_methlevel_choose_mean)
mofa_list <- list()
mofa_list$file1 <- STAD_GpC_methlevel_choose_mean_matrix
STAD_GpC_mofa <- MOFA_est(mofa_list,group = STAD_sample_choose$group)
plot_dimred(STAD_GpC_mofa, method = "UMAP",color_by = "group",dot_size = 2,label = F)+
theme(legend.title=element_blank())
STAD_GpC_mofa <- MOFA_est(mofa_list)
plot_dimred(STAD_GpC_mofa, method = "UMAP",color_by = "group",dot_size = 2,label = F)+
theme(legend.title=element_blank())
STAD_GpC_methlevel_choose_mean_matrix <- as.matrix(STAD_GpC_methlevel_choose)
mofa_list <- list()
mofa_list$file1 <- STAD_GpC_methlevel_choose_mean_matrix
STAD_GpC_mofa <- MOFA_est(mofa_list,group = STAD_sample_choose$group)
plot_dimred(STAD_GpC_mofa, method = "UMAP",color_by = "group",dot_size = 2,label = F)+
theme(legend.title=element_blank())
STAD_GpC_mofa <- run_umap(STAD_GpC_mofa,min_dist = 0.01)
plot_dimred(STAD_GpC_mofa, method = "UMAP",color_by = "group",dot_size = 2,label = F)+
theme(legend.title=element_blank())
STAD_GpC_umap_data <- STAD_GpC_mofa@dim_red$UMAP
STAD_GpC_umap_data <- cbind(STAD_GpC_umap_data,STAD_GpC_mofa@samples_metadata$group)
colnames(STAD_GpC_umap_data)[4] <- "group"
rownames(STAD_GpC_umap_data) <- 1:nrow(STAD_GpC_umap_data)
ggplot(STAD_GpC_umap_data)+
geom_point(STAD_GpC_umap_data,mapping=aes(UMAP1,UMAP2,color=group),size = 2)+
theme_classic()+
labs(x = "UMAP1",y = "UMAP2",title = "GpC UMAP")+
theme(legend.title=element_blank(),
plot.title = element_text(hjust = 0.5,size = 18,face = "bold"),
axis.title.x = element_text(face = "bold",size = 15),
axis.title.y = element_text(face = "bold",size = 15))
ggplot(STAD_GpC_umap_data)+
geom_point(STAD_GpC_umap_data,mapping=aes(UMAP1,UMAP2,color=group),size = 2.3,alpha=0.7)+
theme_classic()+
labs(x = "UMAP1",y = "UMAP2",title = "GpC UMAP")+
theme(legend.title=element_blank(),
plot.title = element_text(hjust = 0.5,size = 18,face = "bold"),
axis.title.x = element_text(face = "bold",size = 15),
axis.title.y = element_text(face = "bold",size = 15))
ggplot(STAD_GpC_umap_data)+
geom_point(STAD_GpC_umap_data,mapping=aes(UMAP1,UMAP2,color=group),size = 2.3,alpha=0.2)+
theme_classic()+
labs(x = "UMAP1",y = "UMAP2",title = "GpC UMAP")+
theme(legend.title=element_blank(),
plot.title = element_text(hjust = 0.5,size = 18,face = "bold"),
axis.title.x = element_text(face = "bold",size = 15),
axis.title.y = element_text(face = "bold",size = 15))
ggplot(STAD_GpC_umap_data)+
geom_point(STAD_GpC_umap_data,mapping=aes(UMAP1,UMAP2,color=group),size = 2.3,alpha=0.7)+
theme_classic()+
labs(x = "UMAP1",y = "UMAP2",title = "GpC UMAP")+
theme(legend.title=element_blank(),
plot.title = element_text(hjust = 0.5,size = 18,face = "bold"),
axis.title.x = element_text(face = "bold",size = 15),
axis.title.y = element_text(face = "bold",size = 15))
ggplot(STAD_GpC_umap_data)+
geom_point(STAD_GpC_umap_data,mapping=aes(UMAP1,UMAP2,color=group),size = 2.3,alpha=0.7)+
theme_classic()+
labs(x = "UMAP1",y = "UMAP2",title = "GpC UMAP")+
theme(legend.title=element_blank(),
plot.title = element_text(hjust = 0.5,size = 18,face = "bold"),
axis.title.x = element_text(face = "bold",size = 15),
axis.title.y = element_text(face = "bold",size = 15))
#GpC heatmap
data <- STAD_GpC_methlevel_choose
data <- as.matrix(data)
data[is.na(data)] <- 0.5
ann_col = data.frame(
Sample=c(rep("Normal",83),rep("Tumor",83)))#创建分组列
row.names(ann_col) <- colnames(data)
top_anno <- HeatmapAnnotation(which = "column",Sample = c(rep("Normal",83),rep("Tumor",83)),
annotation_name_side = "right",
col = list(sample = c("Normal"="#d57b70","Tumor"="#acd2c7"))
)
Heatmap(data,show_row_names = F,show_column_names = F,
show_row_dend = F,show_column_dend = F,column_order = rownames(ann_col),
top_annotation = top_anno,column_title = "GpC Heatmap",
column_title_side = "bottom",col = col_fun,
column_title_gp = gpar(
fontsize = 16,       # 字号
fontface = "bold"   # 加粗
# col = "blue",        # 字体颜色
))
#SRP131815----
STAD_data <- read.csv("../database_1/STAD_SRP131815_counts_genename_unique.csv",header = T,row.names = 1)
STAD_expr_length <- data.frame(length=STAD_data$Length)
rownames(STAD_expr_length) <- rownames(STAD_data)
STAD_expr <- STAD_data[,-1]
STAD_sample <- read.csv("../database_1/SraRunTable_SRP131815.csv")
STAD_sample_choose <- data.frame(group=STAD_sample$tissue)
rownames(STAD_sample_choose) <- STAD_sample$Run
#seurat
STAD_pbmc <- CreateSeuratObject(counts = STAD_expr,
min.cells = 50, min.features = 200)
# STAD_pbmc <- AddMetaData(object = STAD_pbmc,
#                               metadata = STAD_sample_choose$group,
#                               col.name = "group")
STAD_pbmc <- NormalizeData(STAD_pbmc, normalization.method = "LogNormalize", scale.factor = 10000)
STAD_pbmc <- FindVariableFeatures(STAD_pbmc, selection.method = "vst", nfeatures = 2000)
STAD_pbmc <- ScaleData(STAD_pbmc)
STAD_pbmc <- RunPCA(STAD_pbmc, features = VariableFeatures(object = STAD_pbmc))
STAD_pbmc <- FindNeighbors(STAD_pbmc)
# STAD_pbmc <- FindClusters(STAD_pbmc,resolution = 0.5)
STAD_pbmc <- FindClusters(STAD_pbmc,resolution = 0.7)
STAD_pbmc <- RunUMAP(STAD_pbmc, dims = 1:5,min.dist = 0.8)
DimPlot(STAD_pbmc,reduction = "umap",pt.size = 2.5,group.by = "seurat_clusters")+
ggtitle("RNA Cluster UMAP")+
theme(plot.title = element_text(hjust = 0.5,size = 18,face = "bold"),
axis.title.x = element_text(face = "bold",size = 15),
axis.title.y = element_text(face = "bold",size = 15))
#monocle3
STAD_pbmc_pseudotime <- Pseudotime_analysis(STAD_pbmc)
monocle3_object <- STAD_pbmc_pseudotime$pseudo_object
colData(monocle3_object)$new_group <- STAD_pbmc$seurat_clusters
#pseudotime plot
data <- STAD_pbmc_pseudotime$pseudo_data
group_count <- length(unique(data$group))
# 使用monocle3默认的伪时间渐变颜色（蓝紫→青→黄→红）
ggplot(data, aes(x = UMAP1, y = UMAP2)) +
geom_point(
aes(color = pseudotime_values, shape = group),
size = 2.3,
alpha = 1
) +
# scale_color_gradientn()
# 关键修改：使用monocle3的渐变颜色（与plot_cells()一致）
scale_color_viridis(
option = "plasma",
# colours = c("#440154FF", "#3B528BFF", "#21908CFF", "#5DC863FF", "#FDE725FF"),  # monocle3默认色阶
values = scales::rescale(c(min(data$pseudotime_values),
quantile(data$pseudotime_values, 0.2),
quantile(data$pseudotime_values, 0.5),
quantile(data$pseudotime_values, 0.8),
max(data$pseudotime_values)))
) +
scale_shape_manual(
values = 1:group_count  # 自动分配形状（最多支持25种）
) +
theme_classic() +
ggtitle("Pseudotime")+
labs(
x = "UMAP1",
y = "UMAP2",
color = "pseudotime",
shape = "Group"
) +
theme(
plot.title = element_text(hjust = 0.5,size = 18,face = "bold"),
legend.position = "right",
legend.key.height = unit(0.8, "cm"),
legend.text = element_text(size = 8),
axis.title.x = element_text(face = "bold",size = 15),
axis.title.y = element_text(face = "bold",size = 15)
)
data
plot_cells(STAD_pbmc_pseudotime$pseudo_object,reduction_method = "UMAP",
color_cells_by = "pseudotime",cell_size = 1.5,graph_label_size = 2,
label_leaves = F,trajectory_graph_segment_size = 1.4,
label_cell_groups = F,label_groups_by_cluster = F,show_trajectory_graph = T)+
ggtitle("Pseudotime")+
theme(plot.title = element_text(hjust = 0.5,size = 18,face = "bold"),
axis.title.x = element_text(face = "bold",size = 15),
axis.title.y = element_text(face = "bold",size = 15))
devtools::load_all(".")
devtools::document()
devtools::load_all(".")
devtools::document()
source("E:/_SpaceSubject/R/R_package/scMultLeu/R/cluster_prediction.R", echo=TRUE)
devtools::load_all(".")
devtools::load_all(".")
devtools::document()
remove.packages("scMethylCA")
devtools::load_all(".")
devtools::document()
devtools::load_all(".")
devtools::document()
remove.packages("scMethylCA")
devtools::load_all(".")
devtools::document()
devtools::load_all(".")
devtools::document()
#CpG STAD SRP295352
STAD_CpG <- read.csv("database_2/STAD_SRP295352_CpG.csv",row.names = 1)
remove.packages("scMethylCA")
devtools::load_all()
devtools::document()
devtools::document()
devtools::load_all()
devtools::load_all()
devtools::document()
